//<auto-generated/>
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using TFX.Core.Controllers;
using TFX.Core.Services;
using System;
using TFX.Core.Model;
using Microsoft.AspNetCore.Http;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using TFX.Core.Data;
using TFX.App.MDL.Servisses;
using TFX.App.INF.Servisses.Rules;

namespace TFX.App.INF.Servisses
{
    [Route("RequestTest")]
    [ApiController]
    public class RequestTestController : XController
    {
        public abstract class BaseINFRequestTestControllerRule : XControllerINFRule<RequestTestController>
        {
            public BaseINFRequestTestControllerRule(RequestTestController pController)
                :base(pController)
            {
            }

            public virtual ResultFields EndPoint(PayloadFields pData)
            {
                return Controller.Service.EndPoint(pData);
            }
        }

        public RequestTestController(IRequestTestService pService)
        {
            Service = pService;
            _Rule = new INFRequestTestControllerRule(this);
        }

        internal readonly IRequestTestService Service;
        private readonly INFRequestTestControllerRule _Rule;

        [HttpPost("OnlyID")]
        public IActionResult EndPoint([FromBody] PayloadFields pData)
        {
            try
            {
                var returns = _Rule.EndPoint(pData);
                return Ok(returns);
            }
            catch (Exception pEx)
            {
                return StatusCode(404, XEndPointMessage.Erro(pEx));
            }  
        }

    }
}